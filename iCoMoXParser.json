[{"id":"ed442511.2272f8","type":"function","z":"91830877.d26b18","name":"iCoMoX Parser","func":"\nvar iCoMoXParser = global.get('iCoMoX');\nvar iComoxMsg = new iCoMoXParser(msg.payload);\n\nif (iComoxMsg  == null)\n    return [null];\n\nvar iCoMoxParsedMsg = iComoxMsg.objectGet();    \nif (iCoMoxParsedMsg == null)\n    return [null];\n\nmsg.payload = iCoMoxParsedMsg;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"global.set('iCoMoX', function iCoMoXParser(binaryData) {\n\tconst VERSION = \"0.0.2\";\n\t\n\tconst BOARD_TYPE = [\"SMIP\",\"NB_IOT\",\"POE\"];\n\tconst FW_BRANCH = [\"Kit\",\"Suitcase\"];\n\t\n\tconst MESSAGE_TYPE = {\n\t  HELLO:0x00,\n\t  REPORT:0xFF\n\t  \n\t};\n\n\tconst REPORT_TYPE = {\n\t\tACCELEROMETER_1:0, \t//AXL362\n\t\tACCELEROMETER_2:1, \t//ADXL362\n\t\tMAGNETOMETER:2,\t\t//BMM150\t\n\t\tTEMP:3,\t\t\t\t//ADT7410\n\t\tMIC:4,\t\t\t//IM69D130\n\t\t//ACCELEROMETER_3:5,\t//ADXL1002\n\t};\n\t\n\t//Binary data set\n\tthis.binaryDataSet = function(binaryData) {\t\n\t\tif (Buffer.isBuffer(binaryData) == false){\n\t\t\tconsole.log(\"Error:Not a buffer\");\n\t\t\tthis.binaryData = null;\n\t\t\treturn null;\n\t\t}\t\n\t\tthis.binaryData = binaryData;\n\t\treturn this;\t\t\n\t}\n\tthis.messageTypeGet = function() {\n\t\tswitch (this.binaryData[0]){\n\t\t\t//Report\n\t\t\tcase MESSAGE_TYPE.REPORT:\n\t\t\t\tbreak;\n\t\t\tcase MESSAGE_TYPE.HELLO:\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t\treturn this.binaryData[0];\n\t}\n\t\n\t//Hello message\n\tthis.twoDigStr =  function(num){\n\t\treturn ('0' + (num).toString(10)).slice(-2);\n\t}\n\tthis.toHexStr =  function(num){\n\t\treturn ('0' + (num).toString(16)).slice(-2);\n\t}\n\t\n\tthis.helloMessageGet = function() {\n\t\tif (this.messageTypeGet()!=MESSAGE_TYPE.HELLO)\n\t\t\treturn null;\n\t\tconsole.log(\"1\");\n\t\tvar res = {};\n\t\tif (this.binaryData[1] >= BOARD_TYPE.length)\n\t\t\treturn null;\n\t\tconsole.log(\"2\");\n\t\tif (this.binaryData[23] >= FW_BRANCH.length)\n\t\t\treturn null;\n\t\tconsole.log(\"3\");\n\t\tres[\"BoardType\"] = BOARD_TYPE[this.binaryData[1]];\n\t\tres[\"Board ver\"] = this.binaryData[2] + \".\" + this.binaryData[3];\n\t\tres[\"MCU Serial\"]=\"\";\n\t\tfor (var i=0; i< 16; i++)\n\t\t\tres[\"MCU Serial\"]+= this.toHexStr(this.binaryData[4+i]);   \n\t\tres[\"FW ver\"] = this.binaryData[20] + \".\" + this.binaryData[21] + \".\" + this.binaryData[22] + FW_BRANCH[this.binaryData[23]];\n\t\tres[\"FW build\"] = \tthis.binaryData[27] + \".\"  + this.binaryData[26] + \".\" + this.binaryData.readInt16LE(24)  +   \" \" + this.binaryData[28] + \":\" + this.twoDigStr(this.binaryData[29]) + \":\" + this.twoDigStr(this.binaryData[30]);\n\t\tres[\"BIT status\"] = \"0x\" + this.toHexStr(this.binaryData[31]);\n\t\tres[\"Part num\"] = this.binaryData.slice(32,32+32).toString().replace(/\\0[\\s\\S]*$/g,'');\n\t\tres[\"Serial\"] = this.binaryData.slice(64,64+32).toString().replace(/\\0[\\s\\S]*$/g,'');\n\t\tres[\"Name\"] = this.binaryData.slice(96,96+32).toString().replace(/\\0[\\s\\S]*$/g,'');\n\t\t\n\t\treturn res;\n\t}\n\t//Reports\n\tthis.reportTypeGet = function() {\n\t\tif (this.isReportMessage()==false)\n\t\t\treturn null;\n\t\treturn this.binaryData[1];\n\t}\n\tthis.isReportMessage = function() {\t\t\n\t\treturn (this.messageTypeGet()==MESSAGE_TYPE.REPORT);\n\t}\n\tthis.timestampGet = function() {\n\t\tif ((this.binaryData.length < 10) && (this.isReportMessage()==true))\n\t\t\treturn null;\t\t\n\t\t\n\t\treturn new Date((Number(this.binaryData.readBigInt64LE(2) ) /32768) * 1000);\n\t\t\n\t}\n\t\n\t\n\t//Reports - Accelerometer 1\t\n\tthis.accelerometer1Get = function() {\n\t\tif  (this.reportTypeGet()!=REPORT_TYPE.ACCELEROMETER_1)\n\t\t\treturn null;\n\t\t\n\t\t//Number of samples per axis\n\t\tvar len = \t(this.binaryData.length - 10) / (3*2);\t\n\t\tvar res = {X:new Float32Array(len),Y:new Float32Array(len),Z:new Float32Array(len)};\n\t\t\n\t\t \n\t\tfor (var i=0; i < len; i++){\n\t\t\tres.X[i] = this.binaryData.readInt16LE(10 + i*6) / 1024;\n\t\t\tres.Y[i] = this.binaryData.readInt16LE(12 + i*6) / 1024;\n\t\t\tres.Z[i] = this.binaryData.readInt16LE(14 + i*6) / 1024;\n\t\t}\n\t\t\n\t\treturn res;\t\t\n\t}\n\t\n\t\n\t//Reports - Accelerometer 2\t\n\tthis.accelerometer2Get = function() {\n\t\tif  (this.reportTypeGet()!=REPORT_TYPE.ACCELEROMETER_2)\n\t\t\treturn null;\n\t\t\n\t\t//Total number of samples\n\t\tvar len = \tMath.floor(2 * (this.binaryData.length - 10) / 3);\t\n\t\tvar tempArr = [new Float32Array(len / 3),new Float32Array(len / 3),new Float32Array(len / 3)];\n\t\t\n\t\tvar payloadIndex = 10;\n\t\tfor (var i=0; i < len ; i = i+2){\n\t\t\t//Get Raw data\n\t\t\ttempArr[i  % 3][Math.floor(i / 3)] = ((this.binaryData[payloadIndex + 1] & 0x0F) << 8) | this.binaryData[payloadIndex];          \n\t\t\ttempArr[(i + 1) % 3][ Math.floor((i+1) / 3)] =  (this.binaryData[payloadIndex + 2] << 4) | (this.binaryData[payloadIndex + 1] >> 4 )\n\t\t\tpayloadIndex = payloadIndex + 3;\n\t\t}\n\t\t\n\t\t//Convert to a/g\t\t\n\t\tfor (var j=0; j < tempArr.length ; j++){\n\t\t\tfor (var i=0; i < tempArr[0].length ; i++){\n\t\t\t\ttempArr[j][i] = (tempArr[j][i] - 2048) * 1.8  / (4096 * 0.08) ;\t\t\t\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn {X:tempArr[0], Y:tempArr[1], Z:tempArr[2]};\n\t}\n\t\n\t//Reports - Magnetometer\n\tthis.magnetometerGet = function() {\n\t\tif  (this.reportTypeGet()!=REPORT_TYPE.MAGNETOMETER)\n\t\t\treturn null;\n\t\t\n\t\tvar len = \tMath.floor( (this.binaryData.length - 10) / 2);\t\t\t\n\t\tvar tempArr = [new Int32Array(len / 3),new Int32Array(len / 3),new Int32Array(len / 3)];\n\t\t\n\t\tfor (var i=0; i < len  ; i++){\n\t\t\ttempArr[i  % 3][Math.floor(i / 3)] = 1000* this.binaryData.readInt16LE(10 + i*2) / 16;\t\t\t\t\t\t\n\t\t}\n\t\t\n\t\treturn {X:tempArr[0], Y:tempArr[1], Z:tempArr[2]};\n\t\t\n\t\t\n\t}\n\t\n\t\n\t//Reports - Temperature\n\tthis.temperatureGet = function() {\n\t\tif  (this.reportTypeGet()!=REPORT_TYPE.TEMP)\n\t\t\treturn null;\n\t\treturn this.binaryData.readInt16LE(10)/128;\n\t}\n\t\n\t\n\t//Reports - MIC\n\tthis.micGet = function() {\n\t\tif  (this.reportTypeGet()!=REPORT_TYPE.MIC)\n\t\t\treturn null;\n\t\t\n\t\tvar len = \tMath.floor( (this.binaryData.length - 10) / 2);\t\t\t\n\t\tvar res =  new Float32Array(len);\n\t\t\n\t\tfor (var i=0; i < len  ; i++){\n\t\t\tres[i] = this.binaryData.readInt16LE(10 + i*2) * Math.pow(10, (130/20))/32768;\t\t\t\t\t\t\n\t\t}\n\t\t\n\t\treturn res;\n\t}\n\t\n  \n\t\n\t\n\t\n\t//Get parsed object\n\tthis.objectGet = function() {\n\t\tvar res = {};\n\t\t\n\t\t//Parse only message type\n\t\tif (this.messageTypeGet() == null)\n\t\t\treturn null;\n\t\t\n\t\tswitch (this.messageTypeGet()){\n\t\t\tcase MESSAGE_TYPE.REPORT:\n\t\t\t\tres.type = \"Report\";\n\t\t\t\tres.timestamp = this.timestampGet();\n\t\t\t\tswitch (this.reportTypeGet()){\n\t\t\t\t\tcase REPORT_TYPE.ACCELEROMETER_1:\n\t\t\t\t\t\tres.reportType = \"ACC1\";\n\t\t\t\t\t\tres[res.reportType] = this.accelerometer1Get();\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase REPORT_TYPE.ACCELEROMETER_2:\n\t\t\t\t\t\tres.reportType = \"ACC2\";\n\t\t\t\t\t\tres[res.reportType] = this.accelerometer2Get();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase REPORT_TYPE.MAGNETOMETER:\n\t\t\t\t\t\tres.reportType = \"MAG\";\n\t\t\t\t\t\tres[res.reportType] = this.magnetometerGet();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase REPORT_TYPE.TEMP:\n\t\t\t\t\t\tres.reportType = \"Temp\";\n\t\t\t\t\t\tres[res.reportType] = this.temperatureGet();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase REPORT_TYPE.MIC:\n\t\t\t\t\t\tres.reportType = \"MIC\";\n\t\t\t\t\t\tres[res.reportType] = this.micGet();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase MESSAGE_TYPE.HELLO:\t\t\t\t\n\t\t\t\tres = this.helloMessageGet();\n\t\t\t\tif (res == null)\n\t\t\t\t\treturn null;\n\t\t\t\tres.type = \"Hello\";\t\t\t\t\n\t\t\tbreak;\t\t\t\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t\treturn res;\n\t}\n\t\n\t//Set data\n\tif (binaryData != undefined)\n\t\tthis.binaryDataSet(binaryData);\n\t\n}\n)\n","finalize":"","x":340,"y":240,"wires":[["8eadd70d.fdc248","49802a53.017af4"]]}]